name: Run Tests

on:
  push:
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          # - macos-latest
          # - windows-latest
        rust:
          # TODO: Add an MSRV (Minimal Rust Supported Version)
          - stable
          # - beta
          # - nightly

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - uses: actions/cache@v2
      id: cache-cpp-project
      with:
        path: |
          ${{github.workspace}}/thirdparty/project-cpp/build
        key: ${{ runner.os }}-cpp-${{ matrix.os }}-${{ hashFiles('**/*.cpp', '**/*.hpp', '**/*.h', '**/CMakeLists.txt') }}

    - uses: actions/cache@v2
      id: cache-rust-project
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          project-sys/target/
          project-rs/target/
        key: ${{ runner.os }}-cargo-${{ matrix.os }}-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml', '**/Cargo.lock') }}

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true
        components: clippy

    - name: Prepare Source Project
      run: |
        mkdir -p ${{github.workspace}}/thirdparty/project-cpp/build

    - name: Configure CMake for Source Project
      if: steps.cache-cpp-project.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/thirdparty/project-cpp/build
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake ../ -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build Source Project
      if: steps.cache-cpp-project.outputs.cache-hit != 'true'
      working-directory: ${{github.workspace}}/thirdparty/project-cpp/build
      # Build your program with the given configuration
      run: cmake --build . --config Debug

    - name: Install Source Project
      if: matrix.os != 'windows-latest'
      working-directory: ${{github.workspace}}/thirdparty/project-cpp/build
      # Build your program with the given configuration
      run: sudo cmake --install . --config Debug

    - name: Install Source Project
      if: matrix.os == 'windows-latest'
      working-directory: ${{github.workspace}}/thirdparty/project-cpp/build
      # Build your program with the given configuration
      run: cmake --install . --config Debug

    - name: Run cargo check on sys crate
      working-directory: ${{github.workspace}}/project-sys
      run: cargo check

    - name: Run cargo check on api crate
      working-directory: ${{github.workspace}}/project-rs
      run: cargo check

    - name: Run clippy on api crate
      working-directory: ${{github.workspace}}/project-rs
      run: cargo clippy

    - name: Run tests on sys crate
      working-directory: ${{github.workspace}}/project-sys
      run: cargo test --verbose

    - name: Run tests api crate
      working-directory: ${{github.workspace}}/project-rs
      run: cargo test --verbose
